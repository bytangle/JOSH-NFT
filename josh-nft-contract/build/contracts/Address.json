{
  "contractName": "Address",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility function\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Address.sol\":{\"keccak256\":\"0xa2e3193af436135b2196e9111e769d0a9633cced7ee9d956df8a42c4db3e3b33\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://70851dc28e43b8d3d8262f4b913bb73895afded8349b166e9f1e605632469f3f\",\"dweb:/ipfs/Qmb6XwiyukuXmx3gQuB9zhgCCzzNMt6fbQttH3g7X1hjgu\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220260d40845c358dff35ea20fdc987f1c84603b11ab68839c9af101b186cd05d6464736f6c63430008100033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220260d40845c358dff35ea20fdc987f1c84603b11ab68839c9af101b186cd05d6464736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "98:382:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "98:382:0:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\n/**\n * @notice Utility function\n */\nlibrary Address {\n    /**\n     @notice checks if an address points to a contract or EOA\n     @param _self the address to check\n     @return `true` if it is or `false` if it isn't\n     */\n    function isAContract(address _self) internal view returns (bool) {\n        uint256 size;\n\n        assembly {\n            size := extcodesize(_self)\n        }\n\n        return size > 0;\n    }\n}",
  "sourcePath": "/Users/josh/Bytangle/Practice/Web3.0 & dApps/contracts/josh-nft/josh-nft-contract/contracts/Address.sol",
  "ast": {
    "absolutePath": "project:/contracts/Address.sol",
    "exportedSymbols": {
      "Address": [
        20
      ]
    },
    "id": 21,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Address",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "62:35:0",
          "text": " @notice Utility function"
        },
        "fullyImplemented": true,
        "id": 20,
        "linearizedBaseContracts": [
          20
        ],
        "name": "Address",
        "nameLocation": "106:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "354:124:0",
              "statements": [
                {
                  "assignments": [
                    11
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "372:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "364:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "364:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "364:12:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "396:50:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "410:26:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_self",
                              "nodeType": "YulIdentifier",
                              "src": "430:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "418:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "418:18:0"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "410:4:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 5,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "430:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 11,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "410:4:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 13,
                  "nodeType": "InlineAssembly",
                  "src": "387:59:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "463:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "470:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "463:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 17,
                  "nodeType": "Return",
                  "src": "456:15:0"
                }
              ]
            },
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "120:164:0",
              "text": "@notice checks if an address points to a contract or EOA\n@param _self the address to check\n@return `true` if it is or `false` if it isn't"
            },
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAContract",
            "nameLocation": "298:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "318:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "310:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:15:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "348:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "347:6:0"
            },
            "scope": 20,
            "src": "289:189:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 21,
        "src": "98:382:0",
        "usedErrors": []
      }
    ],
    "src": "37:443:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-08-30T10:55:29.872Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Utility function",
    "version": 1
  }
}